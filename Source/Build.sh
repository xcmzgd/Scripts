#!/bin/bash

# 获取当前工作目录的名称
repo_name=$(basename "$GITHUB_REPOSITORY")

# 创建当前仓库的目录结构
if [[ "$repo_name" == "Scripts" ]]; then
    echo "Running in Scripts repository"
    mkdir -p Scripts-repo/{Ruleset,QuantumultX/Ruleset,Stash/Ruleset,Surge/Ruleset}

    urls=(
        "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list"
        "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Malicious.list"
        "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Tracking.list"
        "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list"
        "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list"
        "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyListChina.list"
    )
    > Scripts-repo/Ruleset/AdBlockLite.list
    for url in "${urls[@]}"; do
        echo "Downloading: $url"
        curl -f -L "$url" >> Scripts-repo/Ruleset/AdBlockLite.list || { echo "Download Failed: $url"; exit 1; }
        echo "" >> Scripts-repo/Ruleset/AdBlockLite.list
    done

    urls=(
        "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list"
        "https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/gfw.txt"
    )
    > Scripts-repo/Ruleset/Global.list
    for url in "${urls[@]}"; do
        echo "Downloading: $url"
        curl -f -L "$url" >> Scripts-repo/Ruleset/Global.list || { echo "Download Failed: $url"; exit 1; }
        echo "" >> Scripts-repo/Ruleset/Global.list
    done

    files=(
        "AdBlock.list https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge.txt"
        "Advertising.list https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules.list"
        "AmazonIP.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/AmazonIp.list"
        "Apple.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Apple.list"
        "BiliBili.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bilibili.list"
        "CNCIDR.list https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/cncidr.txt"
        "CNCIDR4.list https://raw.githubusercontent.com/Hackl0us/GeoIP2-CN/release/CN-ip-cidr.txt"
        "CNCIDR6.list https://raw.githubusercontent.com/Masaiki/GeoIP2-CN/release/CN-ip-cidr.txt"
        "China.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list"
        "ChinaASN.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/ChinaASN/ChinaASN_Resolve.list"
        "ChinaIPBGP.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/ChinaIPsBGP/ChinaIPsBGP.list"
        "ChinaIPMax.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/ChinaIPs/ChinaIPs.list"
        "ChinaIPv4.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaIp.list"
        "ChinaIPv6.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaIpV6.list"
        "ChinaMax.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax.list"
        "ChinaMediaMax.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMedia/ChinaMedia.list"
        "DIRECT.list https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/direct.txt"
        "Easylist.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyList.list"
        "Game.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Game/Game.list"
        "GlobalMax.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Global/Global.list"
        "GlobalMediaMax.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GlobalMedia/GlobalMedia.list"
        "Google.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Google.list"
        "GreatFire.list https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/greatfire.txt"
        "GreatFireWall.list https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/gfw.txt"
        "Microsoft.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Microsoft.list"
        "Netflix.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Netflix.list"
        "PROXY.list https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/proxy.txt"
        "Privacy.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyPrivacy.list"
        "Private.list https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/private.txt"
        "PrivateTracker.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/PrivateTracker.list"
        "REJECT.list https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/reject.txt"
        "Tld-Not-CN.list https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/tld-not-cn.txt"
    )
    for file in "${files[@]}"; do
        set -- $file
        echo "Downloading: $2"
        curl -f -L -o "Scripts-repo/Ruleset/$1" "$2" || { echo "Download Failed: $2"; exit 1; }
    done

    files=(
        "QuantumultX/Ruleset/AdBlock.list https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge.txt"
        "Stash/Ruleset/AdBlock.yaml https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge.txt"
        "Surge/Ruleset/AdBlock.list https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge.txt"
        "QuantumultX/Ruleset/Advertising.list https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules.list"
        "Stash/Ruleset/Advertising.yaml https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules.list"
        "Surge/Ruleset/Advertising.list https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules.list"
    )
    for file in "${files[@]}"; do
        set -- $file
        echo "Downloading: $2"
        curl -f -L -o "Scripts-repo/$1" "$2" || { echo "Download Failed: $2"; exit 1; }
    done

    echo "Scripts repository: All Files Downloaded!"

# 创建当前仓库的目录结构
elif [[ "$repo_name" == "Matrix-io" ]]; then
    echo "Running in Matrix-io repository"
    mkdir -p Matrix-io-repo/{Clash,Egern,Loon,QuantumultX,Shadowrocket,Sing-box,Stash,Surge}/Ruleset

    declare -A ruleset=(
        [ABC]="ABC.list"
        [AMAP]="AMAP.list"
        [Abema]="Abema.list"
        [AbemaTV]="AbemaTV.list"
        [AcFun]="AcFun.list"
        [AdBlock]="AdBlock.list"
        [Adobe]="Adobe.list"
        [Advertising]="Advertising.list"
        [Aixcoder]="Aixcoder.list"
        [Akamai]="Akamai.list"
        [Alibaba]="Alibaba.list"
        [AliPay]="AliPay.list"
        [All4]="All4.list"
        [Amazon]="Amazon.list"
        [AmazonCN]="AmazonCN.list"
        [AmazonIP]="AmazonIP.list"
        [Anaconda]="Anaconda.list"
        [Android]="Android.list"
        [Aparat]="Aparat.list"
        [AppStore]="AppStore.list"
        [Apple]="Apple.list"
        [AppleTV]="AppleTV.list"
        [Azure]="Azure.list"
        [BBC]="BBC.list"
        [BOC]="BOC.list"
        [BOCOM]="BOCOM.list"
        [Baidu]="Baidu.list"
        [BiliBili]="BiliBili.list"
        [BiliBiliIntl]="BiliBiliIntl.list"
        [Binance]="Binance.list"
        [Bitauto]="Bitauto.list"
        [Blizzard]="Blizzard.list"
        [Blued]="Blued.list"
        [Boylove]="Boylove.list"
        [ByteDance]="ByteDance.list"
        [CCB]="CCB.list"
        [CCTV]="CCTV.list"
        [CNCIDR]="CNCIDR.list"
        [CNCIDR4]="CNCIDR4.list"
        [CNCIDR6]="CNCIDR6.list"
        [CNKI]="CNKI.list"
        [CSDN]="CSDN.list"
        [CaiNiao]="CaiNiao.list"
        [Canon]="Canon.list"
        [Canonical]="Canonical.list"
        [China]="China.list"
        [ChinaASN]="ChinaASN.list"
        [ChinaIPBGP]="ChinaIPBGP.list"
        [ChinaIPMax]="ChinaIPMax.list"
        [ChinaIPv4]="ChinaIPv4.list"
        [ChinaIPv6]="ChinaIPv6.list"
        [ChinaMax]="ChinaMax.list"
        [ChinaMedia]="ChinaMedia.list"
        [ChinaMobile]="ChinaMobile.list"
        [ChinaTelecom]="ChinaTelecom.list"
        [ChinaUnicom]="ChinaUnicom.list"
        [Claude]="Claude.list"
        [Cloudcone]="Cloudcone.list"
        [Cloudflare]="Cloudflare.list"
        [Coinone]="Coinone.list"
        [Collabora]="Collabora.list"
        [Comodo]="Comodo.list"
        [Coolapk]="Coolapk.list"
        [Copilot]="Copilot.list"
        [Ctexcel]="Ctexcel.list"
        [DAZN]="DAZN.list"
        [DIRECT]="DIRECT.list"
        [DMM]="DMM.list"
        [DNSPod]="DNSPod.list"
        [Dcard]="Dcard.list"
        [Deezer]="Deezer.list"
        [Developer]="Developer.list"
        [Discord]="Discord.list"
        [Discovery]="Discovery.list"
        [Discuz]="Discuz.list"
        [Disney]="Disney.list"
        [Docker]="Docker.list"
        [Domob]="Domob.list"
        [DouBan]="DouBan.list"
        [DouYin]="DouYin.list"
        [DouYu]="DouYu.list"
        [Dropbox]="Dropbox.list"
        [Dubox]="Dubox.list"
        [Durex]="Durex.list"
        [Easylist]="Easylist.list"
        [Eleme]="Eleme.list"
        [EncoreTVB]="EncoreTVB.list"
        [Epic]="Epic.list"
        [Facebook]="Facebook.list"
        [FanQienovel]="FanQienovel.list"
        [Fandom]="Fandom.list"
        [Fedora]="Fedora.list"
        [Feizhu]="Feizhu.list"
        [Fox]="Fox.list"
        [FoxNow]="FoxNow.list"
        [FoxPlus]="FoxPlus.list"
        [FuboTV]="FuboTV.list"
        [GEOIPCN]="GEOIPCN.list"
        [Garena]="Garena.list"
        [Gemini]="Gemini.list"
        [GitBook]="GitBook.list"
        [GitHub]="GitHub.list"
        [GitLab]="GitLab.list"
        [Global]="Global.list"
        [GlobalMax]="GlobalMax.list"
        [GlobalMedia]="GlobalMedia.list"
        [Google]="Google.list"
        [GoogleCN]="GoogleCN.list"
        [GovernmentCN]="GovernmentCN.list"
        [GreatFireWall]="GreatFireWall.list"
        [Gucci]="Gucci.list"
        [HBO]="HBO.list"
        [HBOAsia]="HBOAsia.list"
        [HKBN]="HKBN.list"
        [HKT]="HKT.list"
        [HMTMedia]="HMTMedia.list"
        [HWTV]="HWTV.list"
        [HamiVideo]="HamiVideo.list"
        [Hema]="Hema.list"
        [Heroku]="Heroku.list"
        [Hetzner]="Hetzner.list"
        [Hinet]="Hinet.list"
        [HuYa]="HuYa.list"
        [Huawei]="Huawei.list"
        [Hulu]="Hulu.list"
        [HuluJP]="HuluJP.list"
        [Huobi]="Huobi.list"
        [Hupu]="Hupu.list"
        [IBM]="IBM.list"
        [ICBC]="ICBC.list"
        [ICloud]="ICloud.list"
        [IFLYTEK]="IFLYTEK.list"
        [IMDB]="IMDB.list"
        [IQiYi]="IQiYi.list"
        [IQiYiIntl]="IQiYiIntl.list"
        [ITV]="ITV.list"
        [JOOX]="JOOX.list"
        [Japonx]="Japonx.list"
        [KKBOX]="KKBOX.list"
        [KKTV]="KKTV.list"
        [KakaoTalk]="KakaoTalk.list"
        [Keep]="Keep.list"
        [Kugou]="Kugou.list"
        [Kuwo]="Kuwo.list"
        [LAN]="LAN.list"
        [LZY]="LZY.list"
        [Landian]="Landian.list"
        [Lanzou]="Lanzou.list"
        [LeTV]="LeTV.list"
        [Lenovo]="Lenovo.list"
        [LiTV]="LiTV.list"
        [Line]="Line.list"
        [LineTV]="LineTV.list"
        [Linkedin]="Linkedin.list"
        [MGTV]="MGTV.list"
        [MIUI]="MIUI.list"
        [Maocloud]="Maocloud.list"
        [Matrix]="Matrix.list"
        [MeiTuan]="MeiTuan.list"
        [Meizu]="Meizu.list"
        [Metart]="Metart.list"
        [MiGu]="MiGu.list"
        [Microsoft]="Microsoft.list"
        [Mozilla]="Mozilla.list"
        [My5]="My5.list"
        [MyTVSuper]="MyTVSuper.list"
        [NGAA]="NGAA.list"
        [NVIDIA]="NVIDIA.list"
        [NaSDDNS]="NaSDDNS.list"
        [Naver]="Naver.list"
        [NaverTV]="NaverTV.list"
        [NetEase]="NetEase.list"
        [NetEaseMusic]="NetEaseMusic.list"
        [Netflix]="Netflix.list"
        [NetflixIP]="NetflixIP.list"
        [Nexon]="Nexon.list"
        [Niconico]="Niconico.list"
        [Nintendo]="Nintendo.list"
        [NivodTV]="NivodTV.list"
        [Notion]="Notion.list"
        [NowE]="NowE.list"
        [OKX]="OKX.list"
        [OPPO]="OPPO.list"
        [Olevod]="Olevod.list"
        [Onedrive]="Onedrive.list"
        [OpenAI]="OpenAI.list"
        [Opera]="Opera.list"
        [Oracle]="Oracle.list"
        [Oreilly]="Oreilly.list"
        [PDD]="PDD.list"
        [PPTV]="PPTV.list"
        [PPX]="PPX.list"
        [PROXY]="PROXY.list"
        [Pandora]="Pandora.list"
        [PandoraTV]="PandoraTV.list"
        [Paramount]="Paramount.list"
        [Patreon]="Patreon.list"
        [PayPal]="PayPal.list"
        [Peacock]="Peacock.list"
        [Picsee]="Picsee.list"
        [PikPak]="PikPak.list"
        [Pinterest]="Pinterest.list"
        [Pixiv]="Pixiv.list"
        [Pixnet]="Pixnet.list"
        [PornHub]="PornHub.list"
        [PrimeVideo]="PrimeVideo.list"
        [Privacy]="Privacy.list"
        [Protonmail]="Protonmail.list"
        [Python]="Python.list"
        [QQ]="QQ.list"
        [QQMusic]="QQMusic.list"
        [Qcloud]="Qcloud.list"
        [Qobuz]="Qobuz.list"
        [Qualcomm]="Qualcomm.list"
        [Quark]="Quark.list"
        [Quora]="Quora.list"
        [REJECT]="REJECT.list"
        [RTHK]="RTHK.list"
        [Rakuten]="Rakuten.list"
        [Razer]="Razer.list"
        [Reabble]="Reabble.list"
        [Realclear]="Realclear.list"
        [RedBook]="RedBook.list"
        [RedHat]="RedHat.list"
        [Reddit]="Reddit.list"
        [Redtube]="Redtube.list"
        [Ruanmei]="Ruanmei.list"
        [SINA]="SINA.list"
        [SMZDM]="SMZDM.list"
        [STUN]="STUN.list"
        [Scholar]="Scholar.list"
        [Seasun]="Seasun.list"
        [Secom]="Secom.list"
        [Shopee]="Shopee.list"
        [Shopify]="Shopify.list"
        [Slack]="Slack.list"
        [Snapp]="Snapp.list"
        [Sogou]="Sogou.list"
        [SohuVideo]="SohuVideo.list"
        [SoundCloud]="SoundCloud.list"
        [Spark]="Spark.list"
        [Speedtest]="Speedtest.list"
        [Spotify]="Spotify.list"
        [Steam]="Steam.list"
        [SteamCN]="SteamCN.list"
        [Streaming]="Streaming.list"
        [StreamingCN]="StreamingCN.list"
        [StreamingHK]="StreamingHK.list"
        [StreamingJP]="StreamingJP.list"
        [StreamingSE]="StreamingSE.list"
        [StreamingUS]="StreamingUS.list"
        [Sumkoo]="Sumkoo.list"
        [Supercell]="Supercell.list"
        [TCL]="TCL.list"
        [TIDAL]="TIDAL.list"
        [TVB]="TVB.list"
        [TVer]="TVer.list"
        [TaiwanGood]="TaiwanGood.list"
        [TapTap]="TapTap.list"
        [TeamViewer]="TeamViewer.list"
        [Telegram]="Telegram.list"
        [Telekom]="Telekom.list"
        [Tencent]="Tencent.list"
        [TencentVideo]="TencentVideo.list"
        [Tendcloud]="Tendcloud.list"
        [TeraBox]="TeraBox.list"
        [Termux]="Termux.list"
        [TikTok]="TikTok.list"
        [Tld-CN]="Tld-CN.list"
        [Tld-Not-CN]="Tld-Not-CN.list"
        [Tonec]="Tonec.list"
        [TouTiao]="TouTiao.list"
        [Tumblr]="Tumblr.list"
        [Twitch]="Twitch.list"
        [Twitter]="Twitter.list"
        [Ucloud]="Ucloud.list"
        [Unbreak]="Unbreak.list"
        [V2ray]="V2ray.list"
        [VISA]="VISA.list"
        [VIVO]="VIVO.list"
        [Vancl]="Vancl.list"
        [Vercel]="Vercel.list"
        [Verizon]="Verizon.list"
        [ViuTV]="ViuTV.list"
        [WeChat]="WeChat.list"
        [WeTV]="WeTV.list"
        [Webex]="Webex.list"
        [WeiBo]="WeiBo.list"
        [WhatsApp]="WhatsApp.list"
        [Wikimedia]="Wikimedia.list"
        [Wikipedia]="Wikipedia.list"
        [XianYu]="XianYu.list"
        [Xiaomi]="Xiaomi.list"
        [Ximalaya]="Ximalaya.list"
        [Xunlei]="Xunlei.list"
        [YYeTs]="YYeTs.list"
        [Yahoo]="Yahoo.list"
        [Yandex]="Yandex.list"
        [YouTube]="YouTube.list"
        [Youku]="Youku.list"
    )
    declare -A formats=(
        [Clash]="yaml"
        [Egern]="yaml"
        [Loon]="list"
        [QuantumultX]="list"
        [Shadowrocket]="list"
        [Sing-box]="json"
        [Stash]="yaml"
        [Surge]="list"
    )
    for rule in "${!ruleset[@]}"; do
        for platform in "${!formats[@]}"; do
            # 需要跳过不做处理的规则
            if [[ "$platform" == "Sing-box" && ( "$rule" == "GEOIPCN" || "$rule" == "ChinaASN" ) ]]; then
                continue
            fi
            extension="${formats[$platform]}"
            output_dir="Matrix-io-repo/$platform/Ruleset"
            echo "Downloading ${ruleset[$rule]} for $platform to $output_dir/$rule.$extension"
            if ! curl -L -o "$output_dir/$rule.$extension" \
            "https://raw.githubusercontent.com/Centralmatrix3/Scripts/master/Ruleset/${ruleset[$rule]}"; then
                echo "Failed to download ${ruleset[$rule]} for $platform"
            fi
        done
    done

    echo "Matrix-io repository: All Rules Downloaded!"
else
    echo "Unknown repository. Please run this script in either Scripts or Matrix-io repository."
    exit 1
fi